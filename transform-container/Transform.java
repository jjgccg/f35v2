/****************************************************************************
* 
* AUTOGENERATED FILE, DO NOT HAND EDIT THIS FILE! 
* 
* @file ecef2lla.java 
* This file is autogenerated from DEXTER.
*  
* AUTOGENERATED 
****************************************************************************/ 

/* Include files for the data structures and helper functions */ 

/**************************************************************************** 
* Convert. 
****************************************************************************/
public class Transform{
 public int numInputParameters = 3;
 public int numOutputParameters = 3;
 
 public double convert
   ( 
   double x, double y, double z, double Out[]
   ) 
{
    /* Convert */
    double a = 6378137;
    double f = 0.0034;
    double b = 6.3568e6;
    double e = Math.sqrt((Math.pow(a, 2) - Math.pow(b, 2)) / Math.pow(a, 2));
    double e2 = Math.sqrt((Math.pow(a, 2) - Math.pow(b, 2)) / Math.pow(b, 2));
    
    double[] lla = { 0, 0, 0 };
    double lat, lon, height, N , theta, p;

    p = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));

    theta = Math.atan((z * a) / (p * b));

    lon = Math.atan(y / x);

    lat = Math.atan(((z + Math.pow(e2, 2) * b * Math.pow(Math.sin(theta), 3)) / ((p - Math.pow(e, 2) * a * Math.pow(Math.cos(theta), 3)))));
    N = a / (Math.sqrt(1 - (Math.pow(e, 2) * Math.pow(Math.sin(lat), 2))));

    double m = (p / Math.cos(lat));
    height = m - N;


    lon = lon * 180 / Math.PI;
    lat = lat * 180 / Math.PI; 
    Out[0] = lat;
    Out[1] = lon;
    Out[2] = height;
     

    /* Done */
    return Out[2];

} /* end ecef2lla */
}
